@model MvcGCUImagesStarter.Helpers.PaginatedList<MvcGCUImagesStarter.Models.Image>

<div id="galleryThumbnail">
    @{ int x = 0; }
    @foreach (var item in Model)
    {
        if (x == 0)
        {
            @:<div class="row">
            x = 1;
        }
        <div class="cell">
            <p>
                @{ string imageURL = "../../Images/" + Html.Encode(item.ImageURL);}
                <a href="@Url.Action("Details", "Image", new { id = item.ImageId })">
                    <img src="@Html.Encode(imageURL)" alt="@Html.Encode(item.ImageTitle)"
                         height="100" width="100" />
                </a>
                <span>
                    <b>Title:</b> @Html.DisplayFor(modelItem => item.ImageTitle)<br />
                    <b>Contributor:</b> @Html.DisplayFor(modelItem => item.ImageContributor)<br>
                    <b>Category:</b> @Html.DisplayFor(modelItem => item.Category) <br>
                    <b>Tags:</b><br>
                    @foreach (var tag in item.Tags) { 
                        @Html.Encode(tag.TagName)<br />
                    }


                </span>
            </p>
        </div>
        if (x == 4)
        {
            @:</div>
            x = 0;
        }
        else
        {
            x++;
        }
    }
</div>

<div class="pagination">

    @if (Model.HasPreviousPage)
    {
        if (ViewBag.category != null && ViewBag.search_string != null)
        {
            @Html.ActionLink("Previous", "FilterByCategory",
             new
             {
                 page = (Model.PageIndex - 1),
                 category = ViewBag.category,
                 search_string = ViewBag.search_string
             })
        }
        else if (ViewBag.tag != null && ViewBag.search_string != null)
        {
            @Html.ActionLink("Previous", "FilterByTag",
             new
             {
                 page = (Model.PageIndex - 1),
                 tag = ViewBag.tag,
                 search_string = ViewBag.search_string
             })
        }       
       
        else if (ViewBag.tag != null)
        {
            @Html.ActionLink("Previous", "FilterByTag",
            new
            {
                page = (Model.PageIndex - 1),
                tag = ViewBag.tag
            })
        }        
        else if (ViewBag.category != null)
        {
            @Html.ActionLink("Previous", "FilterByCategory",
            new
            {
                page = (Model.PageIndex - 1),
                category = ViewBag.category
            })
        }
        else if (ViewBag.search_string != null)
        {
            @Html.ActionLink("Previous", "Search",
            new
            {
                page = (Model.PageIndex - 1),
                search_string = ViewBag.search_string
            })
        }
        else
        {
            @Html.ActionLink("Previous", "Index",
            new { page = (Model.PageIndex - 1) })
        }
    }


    @for (int i = 0; i < ViewBag.noPages; i++)
    {

        if (Model.PageIndex != i)
        {   
                 
            if (ViewBag.category != null && ViewBag.search_string != null)
            {
                @Html.ActionLink((i+1)+"", "FilterByCategory",
                new
                {
                    page = i,
                    category = ViewBag.category,
                    search_string = ViewBag.search_string
                })  
            } else if (ViewBag.tag != null && ViewBag.search_string != null) {
                @Html.ActionLink((i + 1) + "" , "FilterByTag",
                new
                {
                    page = i,
                    tag = ViewBag.tag,
                    search_string = ViewBag.search_string
                }) 

            }
            else if (ViewBag.tag != null)
            {
                @Html.ActionLink((i + 1) + "", "FilterByTag",
                new
                {
                    page = i,
                    tag = ViewBag.tag
                
                }) 
            }
            else if (ViewBag.category != null)
            {
                @Html.ActionLink((i + 1) + "", "FilterByCategory",
                new
                {
                    page = i,
                    category = ViewBag.category
                }) 
            }
            else if (ViewBag.search_string != null)
            { 
               @Html.ActionLink((i + 1) + "", "Search",
                            new { page = i, search_string = ViewBag.search_string })          
        
            }        
            else 
            { 
               @Html.ActionLink((i + 1) + "", "Index",
                            new { page = i })          
        
            }
        }
        else
        {
            
            @Html.Raw("<b>"+(i+1)+"</b>")
        }
        
        @Html.Encode(" ");  
        
    }


    @if (Model.HasNextPage)
    {
        if (ViewBag.category != null && ViewBag.search_string != null)
        {
            @Html.ActionLink("Next", "FilterByCategory",
            new
            {
                page = (Model.PageIndex + 1),
                category = ViewBag.category,
                search_string = ViewBag.search_string
            })
        }
        else if (ViewBag.tag != null && ViewBag.search_string != null)
        {
            @Html.ActionLink("Next", "FilterByTag",
            new
            {
                page = (Model.PageIndex + 1),
                tag = ViewBag.tag,
                search_string = ViewBag.search_string
            })           
        }
        else if (ViewBag.tag != null)
        {
            @Html.ActionLink("Next", "FilterByTag",
            new
            {
                page = (Model.PageIndex + 1),
                tag = ViewBag.tag
            })
        }                
        else if (ViewBag.category != null)
        {
            @Html.ActionLink("Next", "FilterByCategory",
            new
            {
                page = (Model.PageIndex + 1),
                category = ViewBag.category
            })
        }
        else if (ViewBag.search_string != null)
        {
            @Html.ActionLink("Next", "Search",
            new
            {
                page = (Model.PageIndex + 1),
                search_string = ViewBag.search_string
            })
        }
        else
        {
            @Html.ActionLink("Next", "Index",
            new { page = (Model.PageIndex + 1) })
        }
    }

</div>

